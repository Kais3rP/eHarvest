{"version":3,"sources":["logo.svg","slices/shopSlice.js","store.js","serviceWorker.js","components/Header.js","components/AddToCart.js","components/PicThumbnail.js","helpers/convertIdNames.js","components/Offers.js","components/ProductsPreview.js","components/MidSection.js","components/Footer.js","components/Cart.js","App.js","index.js"],"names":["module","exports","shopSlice","createSlice","name","initialState","cart","isCartOpen","offersItems","reducers","addToCart","state","action","push","payload","resetCart","toggleCart","fetchOffers","actions","configureStore","reducer","shop","shopReducer","Boolean","window","location","hostname","match","dispatch","useDispatch","HeaderWrapper","HeaderLink","to","CartButton","onClick","styled","div","button","item","useSelector","console","log","ThumbnailOfferContainer","OfferPic","src","pic","exec","AddToCart","type","color","height","width","timeout","img","OffersWrapper","OffersTitle","PicThumbnailContainer","map","i","PicThumbnail","key","id","idLeft","idRight","ProductsPreviewWrapper","ProductsLeft","ProductsTitle","ProductsRight","MidSectionWrapper","Offers","ProductsPreview","FooterWrapper","position","CartWrapper","style","right","ControlCart","ResetCartButton","CloseCartButton","ThumbnailsWrapper","ThumbnailProductContainer","ProductPic","ProductQuantity","quantity","useEffect","a","fetch","res","json","data","AppWrapper","Header","Cart","path","MidSection","Footer","ReactDOM","render","StrictMode","store","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e492cd7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\nconst url = '/offers';\r\n\r\nexport const shopSlice = createSlice({\r\n  name: 'shop',\r\n  initialState: {\r\n   cart:[],\r\n   isCartOpen: false,\r\n   offersItems:[]\r\n  },\r\n  reducers: {\r\n   addToCart: (state,action) => {\r\n   \r\n     \r\n     state.cart.push(action.payload)\r\n   },\r\n   resetCart: (state,action) => {\r\n     state.cart = [];\r\n   },\r\n   toggleCart: (state,action) => {\r\n     state.isCartOpen = !state.isCartOpen\r\n   },\r\n   fetchOffers: (state, action) => {\r\n     state.offersItems = action.payload;\r\n   }\r\n  }\r\n});\r\n\r\nexport const { addToCart, resetCart, toggleCart, fetchOffers } = shopSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const fetchOfferItems = () => async dispatch => {\r\n  let res = await fetch(url);\r\n  let data = await res.json();\r\n  //console.log(data.pics);\r\n  dispatch(fetchOffers(data));\r\n  \r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default shopSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport shopReducer from './slices/shopSlice';\r\n\r\n\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    shop: shopReducer\r\n},\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetCart, toggleCart } from '../slices/shopSlice';\r\n\r\n\r\nexport default function (){\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <HeaderWrapper>\r\n<HeaderLink><Link to=\"/gallery\">Gallery</Link></HeaderLink>\r\n<HeaderLink><Link to=\"/\">Home</Link></HeaderLink>\r\n<CartButton onClick={() => {dispatch(toggleCart())}}>Cart</CartButton>\r\n\r\n\r\n        </HeaderWrapper>\r\n       \r\n    )\r\n}\r\n\r\nconst HeaderWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: flex-end;\r\nalign-items: center;\r\nwidth:100%;\r\nheight:100px;\r\nposition: fixed;\r\ntop:0;\r\nleft:0;\r\nbackground:yellow;\r\ntext-align:center;\r\nz-index:2;\r\n\r\n\r\n`\r\nconst CartButton = styled.button`\r\n\r\nwidth:100px;\r\nheight:40px;\r\nbackground: violet;\r\nborder: 1px solid black;\r\nmargin:5px;\r\ncursor: pointer;\r\n\r\n`\r\n\r\nconst HeaderLink = styled.div`\r\nmargin:10px;\r\n\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addToCart, toggleCart } from '../slices/shopSlice';\r\n\r\n\r\n\r\nexport default function ({ item }){\r\n    const cart = useSelector( state => state.shop.cart);\r\n    const isCartOpen = useSelector( state => state.shop.isCartOpen)\r\n    const dispatch = useDispatch();\r\n    return (\r\n     <CartButton onClick = {() => { \r\n         dispatch(addToCart(item));\r\n\r\n         if (!isCartOpen) dispatch(toggleCart())\r\n          } }>\r\n         Add To Cart\r\n     </CartButton>\r\n       \r\n    )\r\n}\r\n\r\n\r\nconst CartButton = styled.button`\r\n\r\nwidth:100%;\r\nheight:30px;\r\nborder:1px solid black;\r\nbackground:yellow;\r\noutline:none;\r\n&:hover{\r\n    opacity:0.7;\r\n    \r\n};\r\n&:active{\r\n    border: 2px inset black;\r\n}\r\n\r\n\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AddToCart from './AddToCart';\r\nimport convertIdNames from '../helpers/convertIdNames';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport default function ({ item }){\r\n  console.log(item)\r\n  let mimeType = \"image/png\";\r\n  \r\n    return (\r\n         item ?\r\n           (<ThumbnailOfferContainer>\r\n            <OfferPic src={`data:${mimeType};base64,${item.pic}`}/>\r\n            {convertIdNames(item)}\r\n            <AddToCart item={item}/>\r\n           </ThumbnailOfferContainer>) \r\n           :\r\n           <Loader\r\n           type=\"TailSpin\"\r\n           color=\"#00BFFF\"\r\n           height={30}\r\n           width={30}\r\n           timeout={3000} //3 secs\r\n   \r\n        />\r\n         )\r\n}\r\n\r\nconst ThumbnailOfferContainer = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth:35%;\r\nmin-width:100px;\r\ntext-align:center;\r\nborder: 1px solid red;\r\nmargin:5px;\r\n`\r\nconst OfferPic = styled.img`\r\n\r\nwidth:98%;\r\n\r\n\r\n`","export default function(str){\r\n\r\nreturn /.*(?=.png)/.exec(str)\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PicThumbnail from './PicThumbnail.js';\r\n\r\n\r\nexport default function (){\r\n    const offersItems = useSelector( state => state.shop.offersItems);\r\n    \r\n    return (\r\n        <OffersWrapper>\r\n        <OffersTitle>OFFERS</OffersTitle>\r\n    <PicThumbnailContainer>\r\n    { offersItems.map( (item,i) => (<PicThumbnail key={i} item={{id: item.id, pic:item.pic}}/>))}\r\n    </PicThumbnailContainer>\r\n         \r\n        </OffersWrapper>\r\n       \r\n    )\r\n}\r\n\r\nconst OffersWrapper = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth:70%;\r\nbackground:aqua;\r\ntext-align:center;\r\n`\r\n\r\n const OffersTitle = styled.div`\r\n width:100%;\r\n height:10%;\r\n background:grey;\r\n \r\n `\r\nconst PicThumbnailContainer = styled.div`\r\n\r\nwidth:100%;\r\nheight:90%;\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\n\r\n","\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport pic from '../logo.svg';\r\nimport PicThumbnail from './PicThumbnail.js';\r\nconst idLeft = [1,2,3,4,5,6,7,8] //IDs and pics have to be organized in objects and fetched\r\nconst idRight = [1,2,3,4,5] //IDs and pics have to be organized in objects and fetched\r\n\r\nexport default function (){\r\n    return (\r\n      <ProductsPreviewWrapper>\r\n      <ProductsLeft>\r\n      <ProductsTitle>MOST VIEWED</ProductsTitle>\r\n      <PicThumbnailContainer> { idLeft.map( (id,i) => (<PicThumbnail key={i} pic={pic} id={id}/>))}</PicThumbnailContainer>\r\n      \r\n           </ProductsLeft>\r\n           <ProductsRight>\r\n           <ProductsTitle>MOST BOUGHT</ProductsTitle>\r\n           <PicThumbnailContainer> { idRight.map( (id,i) => (<PicThumbnail key={i} pic={pic} id={id}/>))}</PicThumbnailContainer>\r\n           </ProductsRight>\r\n      </ProductsPreviewWrapper>\r\n       \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst ProductsPreviewWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: flex-start;\r\nwidth:100%;\r\nbackground:lavender;\r\ntext-align:center;\r\n\r\n`\r\nconst ProductsLeft = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction:column;\r\nwidth:50%;\r\nbackground:violet;\r\ntext-align:center;\r\n\r\n\r\n\r\n`\r\n\r\nconst ProductsRight = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction:column;\r\nwidth:50%;\r\nbackground:blue;\r\ntext-align:center;\r\n\r\n\r\n`\r\n\r\nconst ProductsTitle = styled.div`\r\nwidth:100%;\r\nheight:10%;\r\nbackground:grey;\r\n\r\n`\r\nconst PicThumbnailContainer = styled.div`\r\n\r\nwidth:100%;\r\nheight:90%;\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-wrap:wrap;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Offers from './Offers';\r\nimport ProductsPreview from './ProductsPreview';\r\n\r\nexport default function (){\r\n    return (\r\n       <MidSectionWrapper>\r\n       <Offers />\r\n       <ProductsPreview />\r\n       </MidSectionWrapper>\r\n       \r\n    )\r\n}\r\n\r\nconst MidSectionWrapper = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth:100%;\r\nheight:40%;\r\nbackground:white;\r\ntext-align:center;\r\nmargin-top:10%;\r\n`\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function (){\r\n    return (\r\n        <FooterWrapper>\r\n            Footer\r\n        </FooterWrapper>\r\n    )\r\n}\r\n\r\nconst FooterWrapper = styled.div`\r\n\r\nwidth:100%;\r\nheight:150px;\r\nbackground:red;\r\ntext-align:center;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { resetCart, toggleCart } from '../slices/shopSlice';\r\nimport PicThumbnail from './PicThumbnail.js';\r\n\r\nexport default function ( { position }){\r\n    const cart = useSelector( state => state.shop.cart);\r\n    const dispatch = useDispatch();\r\n    let mimeType = \"image/png\";\r\n    return (\r\n        <CartWrapper style={{right: position }}>\r\n        <ControlCart>  \r\n        \r\n        <ResetCartButton onClick={ () => {dispatch(resetCart())}}>Reset Cart</ResetCartButton>\r\n        <CloseCartButton onClick={()=>{dispatch(toggleCart())}}>&times;</CloseCartButton>\r\n        </ControlCart>\r\n       <ThumbnailsWrapper>\r\n\r\n       {cart.map( (item,i) => (<ThumbnailProductContainer> <ProductPic key={i} id={item.id} src={`data:${mimeType};base64,${item.pic}`}></ProductPic><ProductQuantity>{item.quantity}</ProductQuantity></ThumbnailProductContainer>))}\r\n       </ThumbnailsWrapper>\r\n        \r\n        \r\n        </CartWrapper>\r\n        \r\n       \r\n    )\r\n}\r\n\r\nconst CartWrapper = styled.div`\r\nposition:fixed;\r\nright:0;\r\nwidth:20%;\r\nheight:100%;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: space-between;\r\nalign-items: center;\r\nbackground:green;\r\nmargin-top:100px;\r\ntransition: right 0.5s ease-in;\r\nz-index:1;\r\n\r\n`\r\n\r\nconst ControlCart = styled.div`\r\n\r\ndisplay:flex;\r\njustify-content:space-between;\r\nalign-items:flex-start;\r\nwidth:100%;\r\nheight:5%;\r\nbackground:orange;\r\nfont-size:20px;\r\nfont-weight:bold;\r\n\r\n\r\n`\r\n\r\nconst ThumbnailsWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: flex-start;\r\nwidth:100%;\r\nheight:95%;\r\noverflow-y: scroll;\r\nflex-wrap:wrap;\r\n\r\n`\r\nconst ThumbnailProductContainer = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth:20%;\r\nheight:10%;\r\ntext-align:center;\r\nborder: 1px solid red;\r\nmargin:5px;\r\n`\r\nconst ProductPic = styled.img`\r\n\r\nwidth:98%;\r\nheight:80%;\r\n\r\n`\r\nconst ProductQuantity = styled.div`\r\n\r\nwidth:98%;\r\nheight:20%;\r\nbackground:white;\r\n\r\n`\r\nconst CloseCartButton = styled.div`\r\nmargin-right:5px;\r\ncursor: pointer;\r\n`\r\nconst ResetCartButton = styled.button`\r\n\r\nwidth:100px;\r\nheight:40px;\r\nbackground: violet;\r\nborder: 1px solid black;\r\nmargin:5px;\r\ncursor: pointer;\r\n\r\n`","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Header from './components/Header';\r\nimport MidSection from './components/MidSection';\r\nimport Footer from './components/Footer';\r\nimport Cart from './components/Cart';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchOfferItems } from './slices/shopSlice';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nexport default function () {\r\n    const isCartOpen = useSelector( state => state.shop.isCartOpen);\r\n    const dispatch = useDispatch();\r\n    useEffect( ()=>{\r\n    dispatch(fetchOfferItems());\r\n    })\r\n    return (\r\n        <Router>\r\n            <AppWrapper>\r\n            \r\n                <Header />\r\n                { isCartOpen ? <Cart position={0}/> : <Cart position={'-500px'}/> }\r\n                <Switch>\r\n                    <Route path=\"/gallery\" >\r\n                        \r\n                    </Route>\r\n                    <Route path=\"/\" >\r\n                        <MidSection />\r\n                    </Route>\r\n                </Switch>\r\n                <Footer />\r\n            </AppWrapper>\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst AppWrapper = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: space-between;\r\nalign-items: center;\r\nalign-items: center;\r\nwidth:100vw;\r\nmin-height:100vh;\r\nbackground:pink;\r\nmargin:0;\r\noverflow:hidden;\r\n`","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n   \r\n        <App/>\r\n     \r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}